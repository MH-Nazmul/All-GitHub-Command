{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "Template": {
		"prefix": "cpp",
		"body": [
		  "/*                                     MH_Nazmul",
		  "                                  Let it be as simple",
		  "                                                                             */",
		  "",
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "//=================================Definition Section==========================",
		  "#define ll long long int",
		  "#define vec vector<ll>",
		  "#define pa pair<ll, ll>",
		  "#define vecp vector<pa>",
		  "#define fi first",
		  "#define sc second",
		  "#define all(x) x.begin(), x.end()",
		  "#define nl cout << \"\\n\"",
		  "//=====================================LETS BEGIN==============================",
		  "",
		  "void solve(void)",
		  "{",
		  "    ",
		  "}",
		  "",
		  "int main()",
		  "{",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    int t;",
		  "    t = 1;",
		  "    // cin>>t;",
		  "    while (t--)",
		  "        solve();",
		  "    return 0;",
		  "}"
		],
		"description": "Template"
	  }

	  "single for loop": {
		"prefix": "f",
		"body": [
		  "for(int i = 0;i < n;i++)",
		  "   {",
		  "    ",
		  "   }",
		  " "
		],
		"description": "single for loop"
	  }


	  "double for loop": {
		"prefix": "ff",
		"body": [
		  "for(int i = 0;i < n;i++)",
		  "   {",
		  "     for(int j = 0;j < m;j++)",
		  "      {",
		  "    ",
		  "      }",
		  "   }",
		  "",
		  " "
		],
		"description": "double for loop"
	  }

 
	  "declare array": {
		"prefix": "arr",
		"body": [
		  "int n;",
		  "cin>>n;",
		  "int arr[n];",
		  " for(int i = 0;i < n;i++)",
		  "   {",
		  "     cin>>arr[i];",
		  "   }",
		  ""
		],
		"description": "declare array"
	  }

	  "declare vector": {
		"prefix": "vrr",
		"body": [
		  "int n;",
		  "cin>>n;",
		  "vec arr;",
		  " for(int i = 0;i < n;i++)",
		  "   {",
		  "     int xx;",
		  "     cin>>xx;",
		  "     arr.push_back(xx);",
		  "   }",
		  ""
		],
		"description": "declare vector"
	  }

	  "printing elements": {
		"prefix": "vcout",
		"body": [
		  "",
		  " for(auto it:arr)",
		  "   {",
		  "     cout<<it<<\" \";",
		  "   }",
		  " cout<<\"\\n\";",
		  ""
		],
		"description": "printing elements"
	  }

}
fd